#include	<stdio.h>
int main(void)
{
	//二维数组，注意数组是从零开始的
	int a[][2] = {//前面可以不赋初值
		{1},//可以不写完，可以有的元素不初始化
		{3,3}
	};
	printf("%d\n", sizeof(a));//一个数字4字节大小
	int b[5] = { 1,1,1 };
	for (int i = 0; i < 5; i++)
	{
		printf("b[%d]=%d\n", i, b[i]);//未定义的全部变成零,中间的不能不初始化
	}
	//二维数组也能部分初始化
	int q[3][3] = {
		{1,2},
		{1}//这里加不加逗号随意
	};
	for (int z = 0; z < 3; z++)
	{
		for (int x = 0; x < 3; x++)
		{
			printf("q[%d][%d]=%d   ", z, x, q[z][x]);
		}
		printf("\n");
	}//very good
	//逐个初始化
	int r[3][3] = { 1,1,1,1,1,1,1,1 };//逐个初始化给部分元素赋初值
	//字符数组的两种方式
	//接下来是重点
	char a1[] = { 'a','b','c','d' };
	char a2[] = "abcd";//居然不能说明有多少个字符，这种方法最后还会有一个你看不见的\0,所以比正常的多占用一个字节\0是字符结束的标志
	printf("%s\n", a2);//a2的好处是可以直接这样打印
	char u[][4] = { {'a','a'},{'b','b'} };
	char g[][4] = { "ab","aa" };//为什么我这里不行呢？我懂了，问题解决了因为这样写和上面说的那样会多一个看不见的\0所以2是不够大的至少要3才行
	char aa[15];
	//scanf("%s", &str);scanf不安全
	scanf_s("%s", aa,15);//后面一定要有参数15，不然会有很恐怖的事情发生
	//假如你输了5个字符他会在后面加一个\0

	return 0;
}
